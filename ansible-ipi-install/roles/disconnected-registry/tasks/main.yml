- set_fact:
    #openshift_version: "{{ openshift_release_image.split(':')[1] }}"
    openshift_version: "latest-4.3"
    openshift_release_image_url: "{{ openshift_release_image }}"
  when: openshift_release_image is defined and openshift_release_image != ''

- block:
    - name: Register release.txt
      uri:
        #url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp-dev-preview/latest/release.txt
        url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest-4.3/release.txt
        return_content: yes
      register: ocp_release_txt

    - set_fact:
        openshift_version: "{{ (ocp_release_txt.content | regex_search('Name:\ .*')).split()[1] }}"
        openshift_release_image_url: "{{ (ocp_release_txt.content | regex_search('Pull From:\ .*')).split()[2] }}"
  when: openshift_release_image == ''

- name: assert oc is present
  command: command -v oc
  register: oc_installed
  failed_when: false

- block:
  - name: obtain oc client archive
    block:
      - name: Get the archived oc binary
        get_url:
          #url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp-dev-preview/{{ openshift_version }}/openshift-client-linux-{{ openshift_version }}.tar.gz
          url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest-4.3/openshift-client-linux-4.3.1.tar.gz
          dest: ~/openshift-client-linux-{{ openshift_version }}.tar.gz
    rescue:
      - name: rescue - get latest 4.3 release build
        shell: |
          curl -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest-4.3/release.txt | awk /Name:/{'print $2'}
          #curl -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp-dev-preview/latest-4.3/release.txt | awk /Name:/{'print $2'}
        register: release_build

      - name: rescue - get latest release oc binary
        get_url:
          #url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp-dev-preview/{{ release_build.stdout }}/openshift-client-linux-{{ release_build.stdout }}.tar.gz
          url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ release_build.stdout }}/openshift-client-linux-{{ release_build.stdout }}.tar.gz
          dest: ~/openshift-client-linux-{{ openshift_version }}.tar.gz

  - name: Unarchive oc binary
    become: true
    unarchive:
      src: ~/openshift-client-linux-{{ openshift_version }}.tar.gz
      dest: /usr/local/bin
      remote_src: yes
  when: oc_installed.rc != 0

- name: Create pull-secret file
  copy:
  content: "{{ pullsecret }}"
    dest: "{{ pullsecret_file }}"

- name: Extract the baremetal installer
  shell: |
    oc adm release extract --registry-config {{ pullsecret_file }} \
        --command=openshift-baremetal-install --to ~ \
       {{ openshift_release_image_url }}

- name: Register openshift-baremetal-install built from commit
  shell: |
    ~/openshift-baremetal-install version | awk '/built from commit/ {print $4}'
  register: installer_built_from_commit

- name: Get rhcos.json
  uri:
    url: https://raw.githubusercontent.com/openshift/installer/{{ installer_built_from_commit.stdout }}/data/data/rhcos.json
  register: rhcos_metadata

- set_fact:
    rhcos_path: "{{ rhcos_metadata.json.images.openstack.path }}"
    rhcos_uri: "{{ rhcos_metadata.json.baseURI }}"

- name: set mirror images facts
  set_fact:
    cacheable: true
    machine_os_installer_image_url: "{{ rhcos_uri }}{{ rhcos_path }}"
    machine_os_installer_image_name: "{{ rhcos_metadata.json.images.openstack.path }}"
    machine_os_installer_image_sha256: "{{ rhcos_metadata.json.images.openstack.sha256 }}"
    machine_os_installer_image_uncompressed_sha256: "{{ rhcos_metadata.json.images.openstack['uncompressed-sha256'] }}"
    machine_os_installer_bootstrap_image_url: "{{ rhcos_uri }}{{ rhcos_metadata.json.images.qemu.path }}"
    machine_os_installer_bootstrap_image_name: "{{ rhcos_metadata.json.images.qemu.path }}"
    machine_os_installer_bootstrap_image_sha256: "{{ rhcos_metadata.json.images.qemu.sha256 }}"
    machine_os_installer_bootstrap_image_uncompressed_sha256: "{{ rhcos_metadata.json.images.qemu['uncompressed-sha256'] }}"

- name: setup containers mirror for disconnected install
  block:
    - name: configure container registry
      include_tasks: setup-local-registry.yaml

    - name: mirror containers
      include_tasks: mirror-container-images.yml

    - name: Extract the baremetal installer
      shell: |
        oc adm release extract --registry-config {{ combined_pull_secret_file }} --command=openshift-baremetal-install --to ~ registry.{{ cluster_domain }}:{{ registry_port }}/localimages/local-release-image:{{ openshift_version }}

    - name: mirror os and bootstrap images
      include_tasks: mirror-os-images.yml
